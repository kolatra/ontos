//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "servers")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub ip: String,
    pub port: i32,
    pub version: String,
    pub protocol: i32,
    pub max_players: i32,
    pub online_players: i32,
    pub auth: String,
    pub created_at: DateTime,
    pub updated_at: DateTime,
    pub forge: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::descriptions::Entity")]
    Descriptions,
    #[sea_orm(has_many = "super::favicons::Entity")]
    Favicons,
    #[sea_orm(has_many = "super::players::Entity")]
    Players,
}

impl Related<super::descriptions::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Descriptions.def()
    }
}

impl Related<super::favicons::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Favicons.def()
    }
}

impl Related<super::players::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Players.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
